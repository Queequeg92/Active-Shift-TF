from __future__ import print_function
import os
# os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"   # see issue #152
# os.environ["CUDA_VISIBLE_DEVICES"] = "0"
import numpy as np
import tensorflow as tf
import lib.active_shift2d_op as active_shift2d_op
import os

# os.environ['CUDA_VISIBLE_DEVICES'] = '2'

# load test data, generated by np.random.random((8, 6, 4, 5))
#with open("test.npz", 'rb') as f:
#  arr = np.load(f)

N = 8
Ci = 6
Co = 6
H = 4
W = 5



arr = np.random.random((N, Ci, H, W))
shift = np.random.random((2, Ci))

config = tf.ConfigProto()
config.gpu_options.allow_growth = True

with tf.Session(config=config) as sess: 
  with tf.device('/gpu:0'):
    a = tf.constant(arr, dtype=tf.float32)
    c = tf.constant(shift, dtype = np.float32)
    result = active_shift2d_op.active_shift2d_op(a, c, strides=[1, 1, 1, 1], paddings=[0, 0, 0, 0])
    sm = sess.run(result)
    grad = tf.gradients(result, [a, c])
    res = [sess.run(g) for g in grad]

print(res[0])
print(sm)

